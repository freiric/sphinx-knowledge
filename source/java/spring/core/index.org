#+begin_src plantuml :file uml/PropertyResolver.png
package org.springframework.core.env {
interface PropertyResolver{
String resolvePlaceholders(String)
}
class MutablePropertySources
PropertyResolver <|-- Environment
interface ConfigurablePropertyResolver
PropertyResolver <|-- ConfigurablePropertyResolver
ConfigurablePropertyResolver <|.. AbstractPropertyResolver
AbstractPropertyResolver  <|-- PropertySourcesPropertyResolver
PropertySourcesPropertyResolver - PropertySources
PropertySources -"*" PropertySource
interface PropertySource
PropertySources <|--  MutablePropertySources
PropertySource <|-- MapPropertySource
}
PropertySource <|--  org.springframework.boot.ansi.AnsiPropertySource
#+end_src

#+RESULTS:
[[file:uml/PropertyResolver.png]]


#+begin_src plantuml :file uml/ConfigurableApplicationContext.png
interface BeanFactory
BeanFactory <|-- ApplicationContext
interface ApplicationContext
ApplicationContext <|-- ConfigurableApplicationContext
interface ConfigurableApplicationContext {
+void refresh()
}
ConfigurableApplicationContext <|.. AbstractApplicationContext

#+end_src

#+RESULTS:
[[file:uml/ConfigurableApplicationContext.png]]

#+BEGIN_SRC plantuml :file uml/postprocessor.jpg
interface ObjectPostProcessor{
T postProcess(T object)
}
SecurityConfigurerAdapter -- CompositeObjectPostProcessor
ObjectPostProcessor <.. CompositeObjectPostProcessor
ObjectPostProcessor <.. AutowireBeanFactoryObjectPostProcessor
AutowireBeanFactoryObjectPostProcessor -- AutowireCapableBeanFactory
interface AutowireCapableBeanFactory{
Object initializeBean(Object existingBean, String beanName)
}

interface InitializingBean {
void afterPropertiesSet() 
}

interface BeanFactory{
}
BeanFactory <-- AutowireCapableBeanFactory
interface BeanFactory{
Object getBean(String name) 
}
AbstractBeanFactory <-- AbstractAutowireCapableBeanFactory
class AbstractBeanFactory{
<T> T doGetBean(String name , Class<T> requiredType, Object[] args, boolean typeCheckOnly)
}
AutowireCapableBeanFactory <.. AbstractAutowireCapableBeanFactory
class AbstractAutowireCapableBeanFactory{
invokeInitMethods(String beanName, final Object bean, RootBeanDefinition mbd)
Object initializeBean(final String beanName, final Object bean, RootBeanDefinition mbd)
}
AbstractAutowireCapableBeanFactory <-- DefaultListableBeanFactory
#+END_SRC

#+RESULTS:
[[file:uml/postprocessor.jpg]]
